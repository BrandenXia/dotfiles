#!/usr/bin/env python3

import sys
import subprocess

from pathlib import Path

from rich import print
from rich.prompt import Prompt
from selenium import webdriver
from selenium.webdriver.common.by import By

animes_path = Path("/Volumes/Quasar/anime")

if not animes_path.exists():
    print("Anime path not found, exiting...")
    sys.exit(1)

options = webdriver.ChromeOptions()
options.enable_downloads = True

driver = webdriver.Chrome(options)


def ask_with_cancel(*args, **kargs) -> str:
    try:
        return Prompt.ask(*args, **kargs)
    except KeyboardInterrupt:
        print("\nAction cancelled by user, exiting...")
        driver.quit()
        sys.exit(0)


search_term = ask_with_cancel("Enter the search term")

# go to the website
driver.get("https://qdm.plus/")

# search
search_box = driver.find_element(By.ID, "wd")
search_box.send_keys(search_term)
search_box.submit()
items = driver.find_elements(By.XPATH, "//*[@id='searchList']/li/div/h4/a")
print("\n".join([f'{i+1}. "{item.text}"' for i, item in enumerate(items)]))

# selection choices
index = ask_with_cancel(
    "Enter the index of the item you want to download",
    choices=[str(i + 1) for i in range(len(items))],
    default="1",
    show_choices=False,
)
selection = items[int(index) - 1]
anime_name = selection.text
items[int(index) - 1].click()

# epsiode choices
eps = driver.find_elements(By.XPATH, "//*[@id='playlist1']/ul/li/a")
print("\n".join([f'{i+1}. "{ep.text}"' for i, ep in enumerate(eps)]))
desired_ep = ask_with_cancel("Enter the number of the episode you want to download")
try:
    if desired_ep == "all":
        pass
    elif "-" in desired_ep:
        start, end = map(int, desired_ep.split("-"))
        eps = eps[start - 1 : end]
    else:
        eps = [eps[int(desired_ep) - 1]]
except IndexError:
    print("Invalid episode number")
    sys.exit(1)

ep_links = [
    (ep.text, link) for ep in eps if (link := ep.get_attribute("href")) is not None
]

# get download links
print("Getting download links...")
download_links = []
for ep_name, ep_link in ep_links:
    driver.get(ep_link)

    iframe = driver.find_element(By.CSS_SELECTOR, "#playleft > iframe")
    driver.switch_to.frame(iframe)
    link = driver.find_element(By.TAG_NAME, "video").get_attribute("src")

    download_links.append((ep_name, link))

driver.quit()

# make directory for anime if not exists
anime_path = animes_path / anime_name
if not anime_path.exists():
    anime_path.mkdir()

# download
# TODO: multi-threaded download
for ep_name, link in download_links:
    print(f"Downloading {ep_name}")

    file_name = anime_path / f"{ep_name}.mp4"
    if file_name.exists():  # skip if already downloaded
        print(f"{ep_name} already downloaded")
        continue

    subprocess.run(["curl", link, "-o", str(file_name.absolute())])

print("Download complete")
